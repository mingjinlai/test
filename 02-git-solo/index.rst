Git独奏
###############

通过前面的章节，我们了解了版本控制系统的历史，也学习了如何安装Git。\
从这一章开始，我们就真正地进入到Git的学习中。Git有着陡峭的学习曲线，即使\
是有着其他版本控制工具经验的老手也不例外。因为有经验的老手会按照在其他版\
本控制系统中遗留的习惯去想当然地操作Git，努力地在Git中寻找对应物，最终会\
因为Git的“别扭”而放弃使用。这也是作者的亲身经历。

Git是开源社区送给每一个人的宝贝，用好它可以实现个人的知识积累、保护好自\
己的数据，以及和他人分享自己的成果。这在其他的很多版本控制系统中是不可想\
象的。试问你会花费少则几万美金去购买商业版本的控制工具么？你会去使用必须\
搭建额外的服务器才能使用的版本控制系统么？你会把“鸡蛋”放在具有单点故障、\
服务器软硬件有可能崩溃的唯一的“篮子”里么？如果你不会，那么选择Git，一定\
是最明智的选择。

本篇还不会涉及团队如何使用Git，而是从个人的视角去研究如何用好Git，并且还\
会揭示Git的原理和奥秘。本篇是全书最重要的部分，是下一步进行团队协作必需\
的知识准备，也是理解全书其余各部分内容的基础。本篇各章节将以实践、思考、\
再实践的方式循序渐进地学习Git。到本篇的结尾，我们会发现通过“Git独奏”也可\
以演绎出美妙的“乐曲”。

那么我们就开始第一个实践吧。

目录:

.. toctree::
   :maxdepth: 3

   010-git-init
   020-git-stage
   030-head-master-commit-refs
   040-git-reset
   050-git-checkout
   060-git-stage-n-stash
   070-git-basic
   080-git-history-travel
   090-back-to-future
   100-git-clone
   110-git-admin
