初识Git
################

Git是一款分布式版本控制系统，有别于CVS和SVN等集中式版本控制系统，\
Git可以让研发团队更加高效地协同工作、提高生产率。使用Git，开发人员的\
工作不会因为频繁地遭遇提交冲突而中断，管理人员也无须为数据的备份而担心。\
经过Linux这样庞大的项目的考验之后，Git被证明可以胜任任何规模的团队，\
即便这个团队的成员分布于世界各地。

Git是开源社区奉献给每一个人的宝贝，用好它可以实现个人的知识积累、保护\
好自己的数据，而且还能与他人分享自己的成果。这对于其他很多商业版本控制\
工具来说是不可想象的。试想你会仅仅为了个人的版本控制而花费高昂的费用去\
购买商业版本控制工具么？你会去使用必须搭建额外的服务器才能使用的版本控制\
系统么？你会把“鸡蛋”放在具有单点故障、服务器软硬件有可能崩溃的唯一的\
“篮子”里么？如果你不会，那么选择Git一定是最明智的选择。

本篇我们首先用一章的内容回顾一下版本控制的历史，并以此向版本控制的前辈\
CVS和SVN致敬。在第2章通过一些典型的版本控制实例向您展示Git独特的魅力，\
让您爱上Git。在本篇的最后一章会介绍Git在Linux、Mac OS X及Windows下的\
安装，这是我们下一步研究Git的基础。

|ICON-SOUND| 在这里有必要纠正一下Git的发音。一种错误是按照单个字母来\
发音，另外一种更为普遍的错误是把整个单词读作“技特”，实际上Git中字母G的\
发音应该是和下列单词中的G类似：great、gift、geek、given。因此Git正确的\
发音应该听起来像是“歌易特”（连读）。实际上在我写作过程中，我为本书取的\
代号（code name）为《Got Git》，面对如此具有对称美的代号您还会把Git\
读错么？

.. |ICON-SOUND| image:: /images/meet-git/icon-01-01-sound.png
   :width: 60px
   :height: 60px

目录:

.. toctree::
   :maxdepth: 3

   010-scm-history
   020-love-git
   030-installation
